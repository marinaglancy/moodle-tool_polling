{"version":3,"sources":["../src/poll.js"],"names":["define","PubSub","params","requestscounter","pollURL","checkRequestCounter","curDate","Date","curTime","getTime","push","slice","length","groupEvents","events","groupped","idx","gidx","found","groupevents","event","id","poll","ajax","XMLHttpRequest","json","onreadystatechange","readyState","status","JSON","parse","responseText","success","results","i","publish","addinfo","fromid","url","encodeURIComponent","userid","token","pageurl","open","send","init","userId","fromId","pageURL","pollURLParam"],"mappings":"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","sourcesContent":["/**\n * User tour control library.\n *\n * @module     tool_polling/poll\n * @package    tool_polling\n * @copyright  2020 Marina Glancy\n */\ndefine(['core/pubsub'], function(PubSub) {\n\n    var params;\n    var requestscounter = [];\n    var pollURL;\n\n    var checkRequestCounter = function() {\n        var curDate = new Date(),\n            curTime = curDate.getTime();\n        requestscounter.push(curTime);\n        requestscounter = requestscounter.slice(-10);\n        // If there were 10 requests in less than 5 seconds, it must be an error. Stop polling.\n        return !(requestscounter.length >= 10 && curTime - requestscounter[0] < 5000);\n    };\n\n    /**\n     * Group same events that have 'groupevents' property together\n     *\n     * This is useful for events that will initiate AJAX request asking for updates.\n     *\n     * @param {[]} events\n     * @return {[]}\n     */\n    var groupEvents = function(events) {\n        var groupped = [],\n            idx,\n            gidx;\n        for (idx in events) {\n            var found = false;\n            if (events[idx].groupevents) {\n                for (gidx in groupped) {\n                    if (groupped[gidx].event === events[idx].event && groupped[gidx].groupevents) {\n                        groupped[gidx].event.id = events[idx].id;\n                        found = true;\n                        break;\n                    }\n                }\n            }\n            if (!found) {\n                groupped.push(events[idx]);\n            }\n        }\n        return groupped;\n    };\n\n    var poll = function() {\n        if (!checkRequestCounter()) {\n            // Too many requests, stop polling.\n            return;\n        }\n\n        var ajax = new XMLHttpRequest(),\n            json;\n        ajax.onreadystatechange = function() {\n            if (this.readyState === 4 && this.status === 200) {\n                if (this.status === 200) {\n                    try {\n                        json = JSON.parse(this.responseText);\n                    } catch {\n                        poll();\n                        return;\n                    }\n\n                    if (!json.success || json.success !== 1) {\n                        // Poll.php returned an error or an exception. Stop trying to poll.\n                        return;\n                    }\n\n                    // Process results - trigger all necessary Javascript/jQuery events.\n                    var groupped = groupEvents(json.results);\n                    for (var i in groupped) {\n                        PubSub.publish(groupped[i].event, groupped[i].addinfo);\n                        // Remember the last id.\n                        params.fromid = groupped[i].id;\n                    }\n\n                    // And start polling again.\n                    poll();\n                } else {\n                    // Must be a server timeout or loss of network - start new process.\n                    poll();\n                }\n            }\n        };\n        var url = pollURL + '?userid=' + encodeURIComponent(params.userid) +\n            '&token=' + encodeURIComponent(params.token) + '&fromid=' + encodeURIComponent(params.fromid) +\n            '&pageURL=' + encodeURIComponent(params.pageurl);\n        ajax.open('GET', url, true);\n        ajax.send();\n    };\n\n    return /** @alias tool_polling/poll */ {\n        init: function(userId, token, fromId, pageURL, pollURLParam) {\n            if (params && params.userid) {\n                // Already initialised.\n                return;\n            }\n            params = {\n                userid: userId,\n                token: token,\n                fromid: fromId,\n                pageurl: pageURL\n            };\n            pollURL = pollURLParam;\n            poll();\n        }\n    };\n});\n"],"file":"poll.min.js"}